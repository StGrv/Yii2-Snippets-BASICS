    public static function sanitize( $var, $type = ENT_QUOTES )
        {
            if ( is_string( $var ) ) {

                while ( $var != ( $temp = html_entity_decode( $var, ENT_QUOTES ) ) ) {
                    $var = $temp;
                }

                while ( $var != ( $temp = stripslashes( $var ) ) ) {
                    $var = $temp;
                }

                return htmlentities( $var );

            } else if ( is_array( $var ) ) {

                for ( $i = 0; $i < count( $var ); $i++ ) {
                    $var[ $i ] = self::sanitize( $var[ $i ], $type );
                }

                return $var;

            } else if ( is_numeric( $var ) ) {

                return $var * 1;

            } else {

                return $var;

            }

        }

        public static function sanitize_decode( $string ) {

            if ( is_string( $string ) ) {

                return html_entity_decode( $string, ENT_QUOTES );

            } else if ( is_array( $string ) ) {

                for ( $i = 0; $i < count( $string ); $i++ ) {
                    $string[ $i ] = self::sanitize_decode( $string[ $i ] );
                }

                return $string;

            } else {

                return $string;
            }

        }
        
        public static function Substr( $string, $start, $end, $encoding )
        {
            return mb_strlen( $string ) > $end ? mb_substr( $string, $start, $end, $encoding ) . '...' : $string;
        }
